{"ast":null,"code":"import _classCallCheck from \"/Users/integrity/Desktop/Github/InQuicker/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/integrity/Desktop/Github/InQuicker/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/integrity/Desktop/Github/InQuicker/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/integrity/Desktop/Github/InQuicker/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/integrity/Desktop/Github/InQuicker/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/integrity/Desktop/Github/InQuicker/src/App.js\";\nimport React, { Component } from 'react';\nimport Cards from './components/Cards';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      schedules: [],\n      currentSelection: ''\n    };\n\n    _this.getStyle = function () {\n      return {\n        display: 'grid',\n        gridTemplateColumns: 'repeat(3, 1fr)',\n        gridColumnGap: '0.5em',\n        gridRowGap: '1em',\n        marginTop: '25px',\n        marginLeft: '50px'\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // create a temporary array to build out before we set the final value to the state at startup\n      var temp = []; // fetch all the schedules from the API\n\n      fetch('https://api.inquicker.com/v2/schedules?api_key=b099b982537e880a747b472fe36ffe62148410eb').then(function (resp) {\n        return resp.json();\n      }).then(function (results) {\n        // use map to apply logic to each of the nested arrays from the api\n        results.data.map(function (obj) {\n          var availTimes = [];\n          var registrationUrl; // go through the available times array and add each value to a local array to build an object\n\n          obj.availableTimes[0].times.map(function (x) {\n            availTimes.push(x.time);\n          });\n          registrationUrl = obj.registrationUrl; // Create a \n\n          var schedule = {\n            name: obj.location.name,\n            facility: obj.facility.name,\n            service: obj.service.name,\n            availabletimes: availTimes,\n            regisUrl: registrationUrl\n          };\n          temp.push(schedule);\n        });\n\n        _this2.setState({\n          schedules: temp\n        });\n      }).catch(function (error) {\n        return console.log('error', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        style: this.getStyle(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Cards, {\n        data: this.state.schedules,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/integrity/Desktop/Github/InQuicker/src/App.js"],"names":["React","Component","Cards","App","state","schedules","currentSelection","getStyle","display","gridTemplateColumns","gridColumnGap","gridRowGap","marginTop","marginLeft","temp","fetch","then","resp","json","results","data","map","obj","availTimes","registrationUrl","availableTimes","times","x","push","time","schedule","name","location","facility","service","availabletimes","regisUrl","setState","catch","error","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;IAEMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,gBAAgB,EAAE;AAFd,K;;UA2CRC,Q,GAAW,YAAM;AACb,aAAO;AACHC,QAAAA,OAAO,EAAE,MADN;AAEHC,QAAAA,mBAAmB,EAAE,gBAFlB;AAGHC,QAAAA,aAAa,EAAE,OAHZ;AAIHC,QAAAA,UAAU,EAAE,KAJT;AAKHC,QAAAA,SAAS,EAAE,MALR;AAMHC,QAAAA,UAAU,EAAE;AANT,OAAP;AAQH,K;;;;;;;wCAhDmB;AAAA;;AAChB;AACA,UAAIC,IAAI,GAAG,EAAX,CAFgB,CAGf;;AACAC,MAAAA,KAAK,CAAC,yFAAD,CAAL,CACCC,IADD,CACM,UAAAC,IAAI,EAAI;AACV,eAAOA,IAAI,CAACC,IAAL,EAAP;AACH,OAHD,EAICF,IAJD,CAIM,UAAAG,OAAO,EAAI;AACb;AACAA,QAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,UAAAC,GAAG,EAAI;AACpB,cAAIC,UAAU,GAAG,EAAjB;AACA,cAAIC,eAAJ,CAFoB,CAGpB;;AACAF,UAAAA,GAAG,CAACG,cAAJ,CAAmB,CAAnB,EAAsBC,KAAtB,CAA4BL,GAA5B,CAAgC,UAAAM,CAAC,EAAI;AAC7BJ,YAAAA,UAAU,CAACK,IAAX,CAAgBD,CAAC,CAACE,IAAlB;AACP,WAFD;AAIAL,UAAAA,eAAe,GAAGF,GAAG,CAACE,eAAtB,CARoB,CASpB;;AACA,cAAIM,QAAQ,GAAG;AACXC,YAAAA,IAAI,EAAET,GAAG,CAACU,QAAJ,CAAaD,IADR;AAEXE,YAAAA,QAAQ,EAAEX,GAAG,CAACW,QAAJ,CAAaF,IAFZ;AAGXG,YAAAA,OAAO,EAAEZ,GAAG,CAACY,OAAJ,CAAYH,IAHV;AAIXI,YAAAA,cAAc,EAAEZ,UAJL;AAKXa,YAAAA,QAAQ,EAAEZ;AALC,WAAf;AAQAV,UAAAA,IAAI,CAACc,IAAL,CAAUE,QAAV;AAEH,SApBD;;AAqBA,QAAA,MAAI,CAACO,QAAL,CAAc;AACVhC,UAAAA,SAAS,EAAES;AADD,SAAd;AAIH,OA/BD,EAgCCwB,KAhCD,CAgCO,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBF,KAApB,CAAJ;AAAA,OAhCZ;AAiCJ;;;6BAaQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAsB,QAAA,KAAK,EAAE,KAAKhC,QAAL,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAE,KAAKH,KAAL,CAAWC,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CADJ;AAOH;;;;EA/DaJ,S;;AAkElB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Cards from './components/Cards';\n\nclass App extends Component {      \n    state = {\n        schedules: [],\n        currentSelection: ''\n    }\n    componentDidMount() {\n        // create a temporary array to build out before we set the final value to the state at startup\n        let temp = [];\n         // fetch all the schedules from the API\n         fetch('https://api.inquicker.com/v2/schedules?api_key=b099b982537e880a747b472fe36ffe62148410eb')\n         .then(resp => {\n             return resp.json();\n         })\n         .then(results => {\n             // use map to apply logic to each of the nested arrays from the api\n             results.data.map(obj => {\n                 let availTimes = [];\n                 let registrationUrl;\n                 // go through the available times array and add each value to a local array to build an object\n                 obj.availableTimes[0].times.map(x => {\n                         availTimes.push(x.time);\n                 });\n \n                 registrationUrl = obj.registrationUrl;\n                 // Create a \n                 let schedule = {\n                     name: obj.location.name,\n                     facility: obj.facility.name,\n                     service: obj.service.name,\n                     availabletimes: availTimes,\n                     regisUrl: registrationUrl\n                 }\n                 \n                 temp.push(schedule);\n                 \n             });\n             this.setState({\n                 schedules: temp\n             });\n\n         })\n         .catch(error => console.log('error',error));\n    }\n\n    getStyle = () => {\n        return {\n            display: 'grid',\n            gridTemplateColumns: 'repeat(3, 1fr)',\n            gridColumnGap: '0.5em',\n            gridRowGap: '1em',\n            marginTop: '25px',\n            marginLeft: '50px'\n        }\n    }\n    \n    render() {\n        return(\n            <div>\n                <div className=\"card\" style={this.getStyle()}>\n                    <Cards data={this.state.schedules} />\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}