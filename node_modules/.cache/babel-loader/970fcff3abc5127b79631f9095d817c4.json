{"ast":null,"code":"import _classCallCheck from \"/Users/integrity/Desktop/InQuicker/inquick/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/integrity/Desktop/InQuicker/inquick/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/integrity/Desktop/InQuicker/inquick/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/integrity/Desktop/InQuicker/inquick/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/integrity/Desktop/InQuicker/inquick/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/integrity/Desktop/InQuicker/inquick/src/App.js\";\nimport React, { Component } from 'react';\nimport Schedules from './Schedules';\nimport AvailableTimes from './components/AvailableTimes';\nimport Hospital from './components/Hospital';\nimport RedirectButton from './components/RedirectButton';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      schedules: []\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var temp = []; // fetch all the schedules from the API\n\n      fetch('https://api.inquicker.com/v2/schedules?api_key=b099b982537e880a747b472fe36ffe62148410eb').then(function (resp) {\n        return resp.json();\n      }).then(function (results) {\n        // use map to apply logic to each of the nested arrays from the api\n        results.data.map(function (obj) {\n          var availTimes = [];\n          var registrationUrl; // go through the available times array and add each value to a local array to build an object\n\n          obj.availableTimes[0].times.map(function (x) {\n            availTimes.push(x.time);\n          });\n          registrationUrl = obj.registrationUrl; // Create a \n\n          var schedule = {\n            name: obj.facility.name,\n            availabletimes: availTimes,\n            regisUrl: registrationUrl\n          };\n          temp.push(schedule);\n        });\n        console.log(schedules);\n\n        _this2.setState({});\n      }).catch(function (error) {\n        return console.log('error', error);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Hospital, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, schedules.name), React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(AvailableTimes, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(RedirectButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/integrity/Desktop/InQuicker/inquick/src/App.js"],"names":["React","Component","Schedules","AvailableTimes","Hospital","RedirectButton","App","state","schedules","temp","fetch","then","resp","json","results","data","map","obj","availTimes","registrationUrl","availableTimes","times","x","push","time","schedule","name","facility","availabletimes","regisUrl","console","log","setState","catch","error"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,cAAP,MAA2B,6BAA3B;;IAEMC,G;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE;AADP,K;;;;;;wCAGY;AAAA;;AAEhB,UAAIC,IAAI,GAAG,EAAX,CAFgB,CAGf;;AACAC,MAAAA,KAAK,CAAC,yFAAD,CAAL,CACCC,IADD,CACM,UAAAC,IAAI,EAAI;AACV,eAAOA,IAAI,CAACC,IAAL,EAAP;AACH,OAHD,EAICF,IAJD,CAIM,UAAAG,OAAO,EAAI;AACb;AACAA,QAAAA,OAAO,CAACC,IAAR,CAAaC,GAAb,CAAiB,UAAAC,GAAG,EAAI;AACpB,cAAIC,UAAU,GAAG,EAAjB;AACA,cAAIC,eAAJ,CAFoB,CAGpB;;AACAF,UAAAA,GAAG,CAACG,cAAJ,CAAmB,CAAnB,EAAsBC,KAAtB,CAA4BL,GAA5B,CAAgC,UAAAM,CAAC,EAAI;AAC7BJ,YAAAA,UAAU,CAACK,IAAX,CAAgBD,CAAC,CAACE,IAAlB;AACP,WAFD;AAIAL,UAAAA,eAAe,GAAGF,GAAG,CAACE,eAAtB,CARoB,CASpB;;AACA,cAAIM,QAAQ,GAAG;AACXC,YAAAA,IAAI,EAAET,GAAG,CAACU,QAAJ,CAAaD,IADR;AAEXE,YAAAA,cAAc,EAAEV,UAFL;AAGXW,YAAAA,QAAQ,EAAEV;AAHC,WAAf;AAMAV,UAAAA,IAAI,CAACc,IAAL,CAAUE,QAAV;AAEH,SAlBD;AAmBAK,QAAAA,OAAO,CAACC,GAAR,CAAYvB,SAAZ;;AACA,QAAA,MAAI,CAACwB,QAAL,CAAc,EAAd;AAGH,OA7BD,EA8BCC,KA9BD,CA8BO,UAAAC,KAAK;AAAA,eAAIJ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBG,KAApB,CAAJ;AAAA,OA9BZ;AA+BJ;;;6BAEQ;AAML,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK1B,SAAS,CAACkB,IADf,CALJ,EAQI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CARJ,CADJ,CADJ;AAiBH;;;;EAhEazB,S;;AAmElB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Schedules from './Schedules';\nimport AvailableTimes from './components/AvailableTimes';\nimport Hospital from './components/Hospital';\nimport RedirectButton from './components/RedirectButton';\n\nclass App extends Component {      \n    state = {\n        schedules: [],\n    }\n    componentDidMount() {\n\n        let temp = [];\n         // fetch all the schedules from the API\n         fetch('https://api.inquicker.com/v2/schedules?api_key=b099b982537e880a747b472fe36ffe62148410eb')\n         .then(resp => {\n             return resp.json();\n         })\n         .then(results => {\n             // use map to apply logic to each of the nested arrays from the api\n             results.data.map(obj => {\n                 let availTimes = [];\n                 let registrationUrl;\n                 // go through the available times array and add each value to a local array to build an object\n                 obj.availableTimes[0].times.map(x => {\n                         availTimes.push(x.time);\n                 });\n \n                 registrationUrl = obj.registrationUrl;\n                 // Create a \n                 let schedule = {\n                     name: obj.facility.name,\n                     availabletimes: availTimes,\n                     regisUrl: registrationUrl\n                 }\n                 \n                 temp.push(schedule);\n                 \n             });\n             console.log(schedules);\n             this.setState({\n                 \n             })\n         })\n         .catch(error => console.log('error',error));\n    }\n    \n    render() {\n        \n       \n\n        \n\n        return(\n            <div>\n                <div className=\"card\">\n\n                    <div className=\"card-title\">\n                        <Hospital />\n                    </div>\n                    <div>\n                        {schedules.name}\n                    </div>\n                    <div className=\"card-body\">\n                        <AvailableTimes />\n                        <RedirectButton />\n                    </div>\n                </div>\n            </div>\n        );\n    };\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}